// Code generated by go-swagger; DO NOT EDIT.

package certificate

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cybledev/odin-sdk-go/models"
)

// PostV1CertificatesSummaryReader is a Reader for the PostV1CertificatesSummary structure.
type PostV1CertificatesSummaryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostV1CertificatesSummaryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostV1CertificatesSummaryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostV1CertificatesSummaryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 402:
		result := NewPostV1CertificatesSummaryPaymentRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostV1CertificatesSummaryRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostV1CertificatesSummaryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/certificates/summary] PostV1CertificatesSummary", response, response.Code())
	}
}

// NewPostV1CertificatesSummaryOK creates a PostV1CertificatesSummaryOK with default headers values
func NewPostV1CertificatesSummaryOK() *PostV1CertificatesSummaryOK {
	return &PostV1CertificatesSummaryOK{}
}

/*
PostV1CertificatesSummaryOK describes a response with status code 200, with default header values.

OK
*/
type PostV1CertificatesSummaryOK struct {
	Payload *models.CertificateCertificateSummaryResponse
}

// IsSuccess returns true when this post v1 certificates summary o k response has a 2xx status code
func (o *PostV1CertificatesSummaryOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post v1 certificates summary o k response has a 3xx status code
func (o *PostV1CertificatesSummaryOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v1 certificates summary o k response has a 4xx status code
func (o *PostV1CertificatesSummaryOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post v1 certificates summary o k response has a 5xx status code
func (o *PostV1CertificatesSummaryOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post v1 certificates summary o k response a status code equal to that given
func (o *PostV1CertificatesSummaryOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post v1 certificates summary o k response
func (o *PostV1CertificatesSummaryOK) Code() int {
	return 200
}

func (o *PostV1CertificatesSummaryOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/certificates/summary][%d] postV1CertificatesSummaryOK %s", 200, payload)
}

func (o *PostV1CertificatesSummaryOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/certificates/summary][%d] postV1CertificatesSummaryOK %s", 200, payload)
}

func (o *PostV1CertificatesSummaryOK) GetPayload() *models.CertificateCertificateSummaryResponse {
	return o.Payload
}

func (o *PostV1CertificatesSummaryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CertificateCertificateSummaryResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV1CertificatesSummaryBadRequest creates a PostV1CertificatesSummaryBadRequest with default headers values
func NewPostV1CertificatesSummaryBadRequest() *PostV1CertificatesSummaryBadRequest {
	return &PostV1CertificatesSummaryBadRequest{}
}

/*
PostV1CertificatesSummaryBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostV1CertificatesSummaryBadRequest struct {
	Payload *models.CertificateErrorResponse
}

// IsSuccess returns true when this post v1 certificates summary bad request response has a 2xx status code
func (o *PostV1CertificatesSummaryBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post v1 certificates summary bad request response has a 3xx status code
func (o *PostV1CertificatesSummaryBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v1 certificates summary bad request response has a 4xx status code
func (o *PostV1CertificatesSummaryBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post v1 certificates summary bad request response has a 5xx status code
func (o *PostV1CertificatesSummaryBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post v1 certificates summary bad request response a status code equal to that given
func (o *PostV1CertificatesSummaryBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post v1 certificates summary bad request response
func (o *PostV1CertificatesSummaryBadRequest) Code() int {
	return 400
}

func (o *PostV1CertificatesSummaryBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/certificates/summary][%d] postV1CertificatesSummaryBadRequest %s", 400, payload)
}

func (o *PostV1CertificatesSummaryBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/certificates/summary][%d] postV1CertificatesSummaryBadRequest %s", 400, payload)
}

func (o *PostV1CertificatesSummaryBadRequest) GetPayload() *models.CertificateErrorResponse {
	return o.Payload
}

func (o *PostV1CertificatesSummaryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CertificateErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV1CertificatesSummaryPaymentRequired creates a PostV1CertificatesSummaryPaymentRequired with default headers values
func NewPostV1CertificatesSummaryPaymentRequired() *PostV1CertificatesSummaryPaymentRequired {
	return &PostV1CertificatesSummaryPaymentRequired{}
}

/*
PostV1CertificatesSummaryPaymentRequired describes a response with status code 402, with default header values.

Payment Required
*/
type PostV1CertificatesSummaryPaymentRequired struct {
	Payload *models.CertificateErrorResponse
}

// IsSuccess returns true when this post v1 certificates summary payment required response has a 2xx status code
func (o *PostV1CertificatesSummaryPaymentRequired) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post v1 certificates summary payment required response has a 3xx status code
func (o *PostV1CertificatesSummaryPaymentRequired) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v1 certificates summary payment required response has a 4xx status code
func (o *PostV1CertificatesSummaryPaymentRequired) IsClientError() bool {
	return true
}

// IsServerError returns true when this post v1 certificates summary payment required response has a 5xx status code
func (o *PostV1CertificatesSummaryPaymentRequired) IsServerError() bool {
	return false
}

// IsCode returns true when this post v1 certificates summary payment required response a status code equal to that given
func (o *PostV1CertificatesSummaryPaymentRequired) IsCode(code int) bool {
	return code == 402
}

// Code gets the status code for the post v1 certificates summary payment required response
func (o *PostV1CertificatesSummaryPaymentRequired) Code() int {
	return 402
}

func (o *PostV1CertificatesSummaryPaymentRequired) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/certificates/summary][%d] postV1CertificatesSummaryPaymentRequired %s", 402, payload)
}

func (o *PostV1CertificatesSummaryPaymentRequired) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/certificates/summary][%d] postV1CertificatesSummaryPaymentRequired %s", 402, payload)
}

func (o *PostV1CertificatesSummaryPaymentRequired) GetPayload() *models.CertificateErrorResponse {
	return o.Payload
}

func (o *PostV1CertificatesSummaryPaymentRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CertificateErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV1CertificatesSummaryRequestTimeout creates a PostV1CertificatesSummaryRequestTimeout with default headers values
func NewPostV1CertificatesSummaryRequestTimeout() *PostV1CertificatesSummaryRequestTimeout {
	return &PostV1CertificatesSummaryRequestTimeout{}
}

/*
PostV1CertificatesSummaryRequestTimeout describes a response with status code 408, with default header values.

Request Timeout
*/
type PostV1CertificatesSummaryRequestTimeout struct {
	Payload *models.CertificateErrorResponse
}

// IsSuccess returns true when this post v1 certificates summary request timeout response has a 2xx status code
func (o *PostV1CertificatesSummaryRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post v1 certificates summary request timeout response has a 3xx status code
func (o *PostV1CertificatesSummaryRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v1 certificates summary request timeout response has a 4xx status code
func (o *PostV1CertificatesSummaryRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post v1 certificates summary request timeout response has a 5xx status code
func (o *PostV1CertificatesSummaryRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post v1 certificates summary request timeout response a status code equal to that given
func (o *PostV1CertificatesSummaryRequestTimeout) IsCode(code int) bool {
	return code == 408
}

// Code gets the status code for the post v1 certificates summary request timeout response
func (o *PostV1CertificatesSummaryRequestTimeout) Code() int {
	return 408
}

func (o *PostV1CertificatesSummaryRequestTimeout) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/certificates/summary][%d] postV1CertificatesSummaryRequestTimeout %s", 408, payload)
}

func (o *PostV1CertificatesSummaryRequestTimeout) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/certificates/summary][%d] postV1CertificatesSummaryRequestTimeout %s", 408, payload)
}

func (o *PostV1CertificatesSummaryRequestTimeout) GetPayload() *models.CertificateErrorResponse {
	return o.Payload
}

func (o *PostV1CertificatesSummaryRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CertificateErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV1CertificatesSummaryInternalServerError creates a PostV1CertificatesSummaryInternalServerError with default headers values
func NewPostV1CertificatesSummaryInternalServerError() *PostV1CertificatesSummaryInternalServerError {
	return &PostV1CertificatesSummaryInternalServerError{}
}

/*
PostV1CertificatesSummaryInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostV1CertificatesSummaryInternalServerError struct {
	Payload *models.CertificateErrorResponse
}

// IsSuccess returns true when this post v1 certificates summary internal server error response has a 2xx status code
func (o *PostV1CertificatesSummaryInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post v1 certificates summary internal server error response has a 3xx status code
func (o *PostV1CertificatesSummaryInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v1 certificates summary internal server error response has a 4xx status code
func (o *PostV1CertificatesSummaryInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post v1 certificates summary internal server error response has a 5xx status code
func (o *PostV1CertificatesSummaryInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post v1 certificates summary internal server error response a status code equal to that given
func (o *PostV1CertificatesSummaryInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post v1 certificates summary internal server error response
func (o *PostV1CertificatesSummaryInternalServerError) Code() int {
	return 500
}

func (o *PostV1CertificatesSummaryInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/certificates/summary][%d] postV1CertificatesSummaryInternalServerError %s", 500, payload)
}

func (o *PostV1CertificatesSummaryInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/certificates/summary][%d] postV1CertificatesSummaryInternalServerError %s", 500, payload)
}

func (o *PostV1CertificatesSummaryInternalServerError) GetPayload() *models.CertificateErrorResponse {
	return o.Payload
}

func (o *PostV1CertificatesSummaryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CertificateErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
