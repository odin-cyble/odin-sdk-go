// Code generated by go-swagger; DO NOT EDIT.

package hosts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cybledev/odin-sdk-go/models"
)

// GetV1HostsExploitsIPReader is a Reader for the GetV1HostsExploitsIP structure.
type GetV1HostsExploitsIPReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetV1HostsExploitsIPReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetV1HostsExploitsIPOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetV1HostsExploitsIPBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 402:
		result := NewGetV1HostsExploitsIPPaymentRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetV1HostsExploitsIPRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetV1HostsExploitsIPInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/hosts/exploits/{ip}/] GetV1HostsExploitsIP", response, response.Code())
	}
}

// NewGetV1HostsExploitsIPOK creates a GetV1HostsExploitsIPOK with default headers values
func NewGetV1HostsExploitsIPOK() *GetV1HostsExploitsIPOK {
	return &GetV1HostsExploitsIPOK{}
}

/*
GetV1HostsExploitsIPOK describes a response with status code 200, with default header values.

OK
*/
type GetV1HostsExploitsIPOK struct {
	Payload *models.IpservicesIPCveResponse
}

// IsSuccess returns true when this get v1 hosts exploits Ip o k response has a 2xx status code
func (o *GetV1HostsExploitsIPOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get v1 hosts exploits Ip o k response has a 3xx status code
func (o *GetV1HostsExploitsIPOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 hosts exploits Ip o k response has a 4xx status code
func (o *GetV1HostsExploitsIPOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get v1 hosts exploits Ip o k response has a 5xx status code
func (o *GetV1HostsExploitsIPOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 hosts exploits Ip o k response a status code equal to that given
func (o *GetV1HostsExploitsIPOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get v1 hosts exploits Ip o k response
func (o *GetV1HostsExploitsIPOK) Code() int {
	return 200
}

func (o *GetV1HostsExploitsIPOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/hosts/exploits/{ip}/][%d] getV1HostsExploitsIpOK %s", 200, payload)
}

func (o *GetV1HostsExploitsIPOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/hosts/exploits/{ip}/][%d] getV1HostsExploitsIpOK %s", 200, payload)
}

func (o *GetV1HostsExploitsIPOK) GetPayload() *models.IpservicesIPCveResponse {
	return o.Payload
}

func (o *GetV1HostsExploitsIPOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IpservicesIPCveResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1HostsExploitsIPBadRequest creates a GetV1HostsExploitsIPBadRequest with default headers values
func NewGetV1HostsExploitsIPBadRequest() *GetV1HostsExploitsIPBadRequest {
	return &GetV1HostsExploitsIPBadRequest{}
}

/*
GetV1HostsExploitsIPBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetV1HostsExploitsIPBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get v1 hosts exploits Ip bad request response has a 2xx status code
func (o *GetV1HostsExploitsIPBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 hosts exploits Ip bad request response has a 3xx status code
func (o *GetV1HostsExploitsIPBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 hosts exploits Ip bad request response has a 4xx status code
func (o *GetV1HostsExploitsIPBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v1 hosts exploits Ip bad request response has a 5xx status code
func (o *GetV1HostsExploitsIPBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 hosts exploits Ip bad request response a status code equal to that given
func (o *GetV1HostsExploitsIPBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get v1 hosts exploits Ip bad request response
func (o *GetV1HostsExploitsIPBadRequest) Code() int {
	return 400
}

func (o *GetV1HostsExploitsIPBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/hosts/exploits/{ip}/][%d] getV1HostsExploitsIpBadRequest %s", 400, payload)
}

func (o *GetV1HostsExploitsIPBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/hosts/exploits/{ip}/][%d] getV1HostsExploitsIpBadRequest %s", 400, payload)
}

func (o *GetV1HostsExploitsIPBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetV1HostsExploitsIPBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1HostsExploitsIPPaymentRequired creates a GetV1HostsExploitsIPPaymentRequired with default headers values
func NewGetV1HostsExploitsIPPaymentRequired() *GetV1HostsExploitsIPPaymentRequired {
	return &GetV1HostsExploitsIPPaymentRequired{}
}

/*
GetV1HostsExploitsIPPaymentRequired describes a response with status code 402, with default header values.

Payment Required
*/
type GetV1HostsExploitsIPPaymentRequired struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get v1 hosts exploits Ip payment required response has a 2xx status code
func (o *GetV1HostsExploitsIPPaymentRequired) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 hosts exploits Ip payment required response has a 3xx status code
func (o *GetV1HostsExploitsIPPaymentRequired) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 hosts exploits Ip payment required response has a 4xx status code
func (o *GetV1HostsExploitsIPPaymentRequired) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v1 hosts exploits Ip payment required response has a 5xx status code
func (o *GetV1HostsExploitsIPPaymentRequired) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 hosts exploits Ip payment required response a status code equal to that given
func (o *GetV1HostsExploitsIPPaymentRequired) IsCode(code int) bool {
	return code == 402
}

// Code gets the status code for the get v1 hosts exploits Ip payment required response
func (o *GetV1HostsExploitsIPPaymentRequired) Code() int {
	return 402
}

func (o *GetV1HostsExploitsIPPaymentRequired) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/hosts/exploits/{ip}/][%d] getV1HostsExploitsIpPaymentRequired %s", 402, payload)
}

func (o *GetV1HostsExploitsIPPaymentRequired) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/hosts/exploits/{ip}/][%d] getV1HostsExploitsIpPaymentRequired %s", 402, payload)
}

func (o *GetV1HostsExploitsIPPaymentRequired) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetV1HostsExploitsIPPaymentRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1HostsExploitsIPRequestTimeout creates a GetV1HostsExploitsIPRequestTimeout with default headers values
func NewGetV1HostsExploitsIPRequestTimeout() *GetV1HostsExploitsIPRequestTimeout {
	return &GetV1HostsExploitsIPRequestTimeout{}
}

/*
GetV1HostsExploitsIPRequestTimeout describes a response with status code 408, with default header values.

Request Timeout
*/
type GetV1HostsExploitsIPRequestTimeout struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get v1 hosts exploits Ip request timeout response has a 2xx status code
func (o *GetV1HostsExploitsIPRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 hosts exploits Ip request timeout response has a 3xx status code
func (o *GetV1HostsExploitsIPRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 hosts exploits Ip request timeout response has a 4xx status code
func (o *GetV1HostsExploitsIPRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v1 hosts exploits Ip request timeout response has a 5xx status code
func (o *GetV1HostsExploitsIPRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 hosts exploits Ip request timeout response a status code equal to that given
func (o *GetV1HostsExploitsIPRequestTimeout) IsCode(code int) bool {
	return code == 408
}

// Code gets the status code for the get v1 hosts exploits Ip request timeout response
func (o *GetV1HostsExploitsIPRequestTimeout) Code() int {
	return 408
}

func (o *GetV1HostsExploitsIPRequestTimeout) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/hosts/exploits/{ip}/][%d] getV1HostsExploitsIpRequestTimeout %s", 408, payload)
}

func (o *GetV1HostsExploitsIPRequestTimeout) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/hosts/exploits/{ip}/][%d] getV1HostsExploitsIpRequestTimeout %s", 408, payload)
}

func (o *GetV1HostsExploitsIPRequestTimeout) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetV1HostsExploitsIPRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1HostsExploitsIPInternalServerError creates a GetV1HostsExploitsIPInternalServerError with default headers values
func NewGetV1HostsExploitsIPInternalServerError() *GetV1HostsExploitsIPInternalServerError {
	return &GetV1HostsExploitsIPInternalServerError{}
}

/*
GetV1HostsExploitsIPInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetV1HostsExploitsIPInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get v1 hosts exploits Ip internal server error response has a 2xx status code
func (o *GetV1HostsExploitsIPInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 hosts exploits Ip internal server error response has a 3xx status code
func (o *GetV1HostsExploitsIPInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 hosts exploits Ip internal server error response has a 4xx status code
func (o *GetV1HostsExploitsIPInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get v1 hosts exploits Ip internal server error response has a 5xx status code
func (o *GetV1HostsExploitsIPInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get v1 hosts exploits Ip internal server error response a status code equal to that given
func (o *GetV1HostsExploitsIPInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get v1 hosts exploits Ip internal server error response
func (o *GetV1HostsExploitsIPInternalServerError) Code() int {
	return 500
}

func (o *GetV1HostsExploitsIPInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/hosts/exploits/{ip}/][%d] getV1HostsExploitsIpInternalServerError %s", 500, payload)
}

func (o *GetV1HostsExploitsIPInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/hosts/exploits/{ip}/][%d] getV1HostsExploitsIpInternalServerError %s", 500, payload)
}

func (o *GetV1HostsExploitsIPInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetV1HostsExploitsIPInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
